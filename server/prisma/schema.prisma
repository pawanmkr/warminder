generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_CONNECTION_STRING")
  schemas  = ["user", "company"]
}

model users {
  id           Int      @id @default(autoincrement())
  name         String
  email        String   @unique()
  country_code Int?
  phone_number String?  @db.VarChar(10)
  picture      String   @default("")
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt

  Session               session[]
  deactivated           deactivated[]
  emails                emails[]
  federated_credentials federated_credentials[]

  @@schema("user")
}

model email_verification_and_password_reset_requests {
  id         Int      @id @default(autoincrement())
  email      String
  token      String   @unique
  expiry     BigInt
  created_at DateTime @default(now())

  @@schema("user")
}

model session {
  id         Int      @id @default(autoincrement())
  user       users    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    Int
  token      String   @unique
  expiry     BigInt
  created_at DateTime @default(now())

  @@schema("user")
}

model federated_credentials {
  id            String @id
  provider      String
  access_token  String @unique
  refresh_token String @unique
  user          users  @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id       Int

  @@schema("user")
}

model deactivated {
  id         Int      @id @default(autoincrement())
  user       users    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    Int
  created_at DateTime @default(now())

  @@schema("user")
}

model sessions {
  sid    String   @id @default(cuid())
  sess   Json     @db.JsonB
  expire DateTime @db.Timestamptz

  @@unique([sid])
  @@schema("user")
}

// Another Schema

model companies {
  id             Int              @id @default(autoincrement())
  name           String
  location       String
  size           String           @default("1-10")
  website        String           @default("")
  created_at     DateTime         @default(now())
  updated_at     DateTime         @updatedAt
  emails         emails[]
  company_skills company_skills[]
  company_roles  company_roles[]

  @@unique([name, location])
  @@schema("company")
}

model emails {
  id         Int       @id @default(autoincrement())
  email      String
  upvote     Int       @default(0)
  downvote   Int       @default(0)
  created_at DateTime  @default(now())
  user       users     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    Int
  company    companies @relation(fields: [company_id], references: [id], onDelete: Cascade)
  company_id Int

  @@unique([email, company_id])
  @@schema("company")
}

model skills {
  id             Int              @id @default(autoincrement())
  skill          String           @unique
  company_skills company_skills[]

  @@schema("company")
}

model company_skills {
  company    companies @relation(fields: [company_id], references: [id], onDelete: Cascade)
  company_id Int
  skill      skills    @relation(fields: [skill_id], references: [id], onDelete: Cascade)
  skill_id   Int

  @@id([company_id, skill_id])
  @@schema("company")
}

model roles {
  id            Int             @id @default(autoincrement())
  role          String          @unique
  company_roles company_roles[]

  @@schema("company")
}

model company_roles {
  company    companies @relation(fields: [company_id], references: [id], onDelete: Cascade)
  company_id Int
  role       roles     @relation(fields: [role_id], references: [id], onDelete: Cascade)
  role_id    Int

  @@id([company_id, role_id])
  @@schema("company")
}
